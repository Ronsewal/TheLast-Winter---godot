[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://mat/titles/fon.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorFunc" id=7]

[sub_resource type="VisualShaderNodeTexture" id=8]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// ColorFunc:3
	vec3 n_out3p0;
	{
		vec3 c = n_out4p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out3p0 = vec3(max2, max2, max2);
	}

// Output:0
	COLOR.rgb = n_out3p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 224.672, -23.9405 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 780, 40 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 560, 40 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( 320, 20 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 4, 0, 3, 0, 4, 1, 0, 1 )

[resource]
shader = SubResource( 6 )
